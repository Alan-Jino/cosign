name: Docker Image CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:

    runs-on: ubuntu-latest
    permissions:
      packages: write
      id-token: write
      contents: read
      actions: read
      security-events: write
    env:
      REGISTRY: ghcr.io
      GH_URL: https://github.com
      REPO: alan-jino/cosign
      
    steps:
      - name: Checkout GitHub Action
        uses: actions/checkout@v3
        # setup Docker build action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Docker metadata
        id: metadata
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.REPO }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value={{sha}},enable=${{ github.ref_type != 'tag' }}
          flavor: |
            latest=true
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GIT_TOKENS }}
      - name: Build image and push to GitHub Container Registry
        uses: docker/build-push-action@v4
        with:
          # relative path to the place where source code with Dockerfile is located
          # Note: tags has to be all lower-case
          tags: ${{ env.REGISTRY }}/${{ env.REPO }}:${{ github.run_id }}
          # ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          # build on feature branches, push only on main branch
          push: true
#      - uses: goodwithtech/dockle-action@main
#        with:
#          image: ${{ env.REGISTRY }}/${{ env.REPO }}/app:${{ github.run_id }}
#          format: 'list'
#          exit-code: '1'
#          exit-level: 'warn'
#          ignore: 'CIS-DI-0001,DKL-DI-0006'
      - name: Install cosign
        uses: sigstore/cosign-installer@main
      - name: Sign the images
        run: |
          cosign sign -y ${{ env.REGISTRY }}/${{ env.REPO }}:${{ github.run_id }}
        env:
          COSIGN_EXPERIMENTAL: 1
      - name: Verify the pushed tags
        run: cosign verify ${{ env.REGISTRY }}/${{ env.REPO }}:${{ github.run_id }} --certificate-identity ${{ env.GH_URL }}/${{ env.REPO }}/.github/workflows/docker-image.yml@refs/heads/main  --certificate-oidc-issuer https://token.actions.githubusercontent.com
        env:
          COSIGN_EXPERIMENTAL: 1
      - name: Run Trivy in GitHub SBOM mode and submit results to Dependency Graph
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          format: 'github'
          output: 'dependency-results.sbom.json'
          image-ref: '.'
          github-pat: ${{ secrets.GIT_TOKENS }}